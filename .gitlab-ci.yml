image: docker:latest

services:
  - docker:dind  # Docker-in-Docker for builds

variables:
  DOCKER_DRIVER: overlay2
  IMAGE_TAG: "registry.gitlab.com/guptalakshya8383/devjourney:$CI_COMMIT_SHORT_SHA"
  LATEST_TAG: "registry.gitlab.com/guptalakshya8383/devjourney:latest"

stages:
  - build_and_push
  - deploy

# ------------------------------------------------
# 1️⃣ BUILD & PUSH
# ------------------------------------------------
build_and_push:
  stage: build_and_push
  script:
    - echo "🔐 Logging into GitLab Container Registry..."
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

    - echo "⚙️ Building and tagging Docker image for DevJourney..."
    - |
      docker build \
        --build-arg FIREBASE_PROJECT_ID="$FIREBASE_PROJECT_ID" \
        --build-arg FIREBASE_CLIENT_EMAIL="$FIREBASE_CLIENT_EMAIL" \
        --build-arg FIREBASE_PRIVATE_KEY="$FIREBASE_PRIVATE_KEY" \
        --build-arg OPENAI_API_KEY="$OPENAI_API_KEY" \
        --build-arg RENDER_SERVICE_ID="$RENDER_SERVICE_ID" \
        --build-arg RENDER_API_KEY="$RENDER_API_KEY" \
        --build-arg NEXT_PUBLIC_FIREBASE_API_KEY="$NEXT_PUBLIC_FIREBASE_API_KEY" \
        --build-arg NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN="$NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN" \
        --build-arg NEXT_PUBLIC_FIREBASE_PROJECT_ID="$NEXT_PUBLIC_FIREBASE_PROJECT_ID" \
        --build-arg NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET="$NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET" \
        --build-arg NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID="$NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID" \
        --build-arg NEXT_PUBLIC_FIREBASE_APP_ID="$NEXT_PUBLIC_FIREBASE_APP_ID" \
        --build-arg NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID="$NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID" \
        -t "$IMAGE_TAG" -t "$LATEST_TAG" .

    - echo "🚀 Pushing Docker image to GitLab registry..."
    - docker push "$IMAGE_TAG"
    - docker push "$LATEST_TAG"

  only:
    - main

# ------------------------------------------------
# 2️⃣ DEPLOY TO RENDER
# ------------------------------------------------
deploy:
  stage: deploy
  image: curlimages/curl:latest
  script:
    - echo "🚀 Triggering deployment on Render..."
    - >
      curl -X POST "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys"
      -H "Authorization: Bearer ${RENDER_API_KEY}"
      -H "Accept: application/json"
      -H "Content-Type: application/json"
  only:
    - main
  dependencies:
    - build_and_push   # ✅ FIXED: now depends on correct stage
  when: on_success
